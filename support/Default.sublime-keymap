[
    // for auto completion trigger
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/LaTeX-Plus/macros/Delete And Hide Auto Complete.sublime-macro"}, "context":
        [
            {"key": "preceding_text", "match_all": true, "operand": "(^\\\\(\\\\\\\\)*$)|((?<=[^\\\\])\\\\(\\\\\\\\)*$)", "operator": "regex_contains"},
            {"key": "selection_empty", "match_all": true, "operand": true, "operator": "equal"},
            {"key": "selector", "operand": "text.tex.latex", "operator": "equal"}
        ]
    },
    { "keys": ["\\", "\\"], "command": "insert", "args": {"characters": "\\\\"}, "context":
        [
            {"key": "selection_empty", "match_all": true, "operand": true, "operator": "equal"},
            {"key": "selector", "operand": "text.tex.latex", "operator": "equal"}
        ]
    },

    // automatic addition of new \items when hitting Shift+Enter in a list environment
    { "keys": ["shift+enter"], "command": "insert_snippet", "args": {"contents": "\n\\item $0"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.list.latex" }
        ]
    },

    // automatic addition of new \items [] when hitting Shift+Enter in a description environment
    { "keys": ["shift+enter"], "command": "insert_snippet", "args": {"contents": "\n\\item [$1] $0"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.description.latex" }
        ]
    },

    // Auto-pair brackets
    { "keys": ["("], "command": "insert_snippet", "args": {"contents": "($1)"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|\\]|;|\\}|\\$|\\\\|$)", "match_all": true }
        ]
    },
    { "keys": ["("], "command": "insert_snippet", "args": {"contents": "(${1:$SELECTION})"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    },
    { "keys": [")"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\)", "match_all": true }
        ]
    },
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\($", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\)", "match_all": true }
        ]
    },

    // Auto-pair square brackets
    { "keys": ["["], "command": "insert_snippet", "args": {"contents": "[$1]"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|\\]|;|\\}|\\$|\\\\|$)", "match_all": true }
        ]
    },
    { "keys": ["["], "command": "insert_snippet", "args": {"contents": "[${1:$SELECTION}]"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    },
    { "keys": ["]"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\]", "match_all": true }
        ]
    },
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\[$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\]", "match_all": true }
        ]
    },

    // Auto-pair curly brackets
    { "keys": ["{"], "command": "insert_snippet", "args": {"contents": "{$1}"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|\\]|;|\\}|\\$|\\\\|$)", "match_all": true }
        ]
    },
    { "keys": ["{"], "command": "wrap_block", "args": {"begin": "{", "end": "}"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "indented_block", "match_all": true },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true },
        ]
    },
    { "keys": ["{"], "command": "insert_snippet", "args": {"contents": "{${1:$SELECTION}}"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    },
    { "keys": ["}"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
        ]
    },
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\{$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
        ]
    },

    // Auto-pair brackets \(
    { "keys": ["\\","("], "command": "insert_snippet", "args": {"contents": "\\($1\\)"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "not_regex_contains", "operand": "\\\\\\\\$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|\\]|;|\\}|\\$|\\\\|$)", "match_all": true }
        ]
    },
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/LaTeX-Plus/macros/Delete Two Left Right.sublime-macro"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\\\\\($", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\\\\\)", "match_all": true }
        ]
    },
    // Auto-pair brackets \[
    { "keys": ["\\","["], "command": "insert_snippet", "args": {"contents": "\\[$1\\]"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "not_regex_contains", "operand": "\\\\\\\\$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|\\]|;|\\}|\\$|\\\\|$)", "match_all": true }
        ]
    },
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/LaTeX-Plus/macros/Delete Two Left Right.sublime-macro"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\\\\\[$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\\\\\]", "match_all": true }
        ]
    },
    { "keys": ["enter"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line in Braces.sublime-macro"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_indent", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\\\\\[$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\\\\\]", "match_all": true }
        ]
    },
    { "keys": ["shift+enter"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line in Braces.sublime-macro"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_indent", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\\\\\[$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\\\\\]", "match_all": true }
        ]
    },
    // Auto-pair brackets \{
    { "keys": ["\\","{"], "command": "insert_snippet", "args": {"contents": "\\\\{$1\\\\}"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "not_regex_contains", "operand": "\\\\\\\\$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|\\]|;|\\}|\\$|\\\\|$)", "match_all": true }
        ]
    },
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/LaTeX-Plus/macros/Delete Two Left Right.sublime-macro"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\\\\\{$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\\\\\}", "match_all": true }
        ]
    },
     // Auto-pair brackets \|
     { "keys": ["\\","|"], "command": "insert_snippet", "args": {"contents": "\\\\|$1\\\\|"}, "context":
         [
             { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
             { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
             { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
             { "key": "preceding_text", "operator": "not_regex_contains", "operand": "\\\\\\\\$", "match_all": true },
             { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|\\]|;|\\}|\\$|\\\\|$)", "match_all": true }
         ]
     },
     { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/LaTeX-Plus/macros/Delete Two Left Right.sublime-macro"}, "context":
         [
             { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
             { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
             { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
             { "key": "preceding_text", "operator": "regex_contains", "operand": "\\\\\\|$", "match_all": true },
             { "key": "following_text", "operator": "regex_contains", "operand": "^\\\\\\|", "match_all": true }
         ]
     },
    // Auto-pair quotes `'
    {
        "keys": ["'"],
        "command": "insert_snippet", "args": { "contents": "`$1'" },
        "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
            { "key": "preceding_text", "operator": "not_regex_contains", "operand": "['a-zA-Z0-9_]$", "match_all": true }
        ]
    },
    {
        "keys": ["'"],
        "command": "insert_snippet", "args": { "contents": "`${1:$SELECTION}'" },
        "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
        ]
    },
    {
        "keys": ["'"],
        "command": "move", "args": { "by": "characters", "forward": true},
        "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^'", "match_all": true }
        ],
    },
    {
        "keys": ["backspace"],
        "command": "run_macro_file", "args": { "file": "res://Packages/Default/Delete Left Right.sublime-macro" },
        "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^'", "match_all": true }
        ]
    },

    // Auto-pair double quotes ``''
    {
        "keys": ["\""],
        "command": "insert_snippet", "args": { "contents": "``$1''" },
        "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
            { "key": "preceding_text", "operator": "not_regex_contains", "operand": "[\"a-zA-Z0-9_]$", "match_all": true },
        ]
    },
    {
        "keys": ["\""],
        "command": "insert_snippet", "args": { "contents": "``${1:$SELECTION}''" },
        "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    },
    {
        "keys": ["\""], "command": "run_macro_file", "args": { "file": "res://Packages/LaTeX-Plus/macros/Move Two Characters.sublime-macro" },
        "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^''", "match_all": false }
        ],
    },
    {
        "keys": ["backspace"],
        "command": "run_macro_file", "args": { "file": "res://Packages/LaTeX-Plus/macros/Delete Two Left Right.sublime-macro" },
        "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "``$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^''", "match_all": true }
        ]
    },

    // Auto-pair inline math $
    {
        "keys": ["$"],
        "command": "insert_snippet", "args": { "contents": "\\$$1\\$" },
        "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|\\]|;|\\}|$)", "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "(?:^|\t| |\\(|\\[|;|\\{)$", "match_all": true },
            { "key": "setting.command_mode", "operator": "equal", "operand" : false}
        ]
    },
    {
        "keys": ["$"],
        "command": "insert_snippet", "args": { "contents": "\\$${1:$SELECTION}\\$" },
        "context":
        [
            { "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
            { "key": "setting.command_mode", "operator": "equal", "operand" : false}
        ]
    },
    {
        "keys": ["$"],
        "command": "move", "args": { "by": "characters", "forward": true },
        "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\$", "match_all": true },
            { "key": "setting.command_mode", "operator": "equal", "operand" : false}
        ]
    },
    {
        "keys": ["backspace"],
        "command": "run_macro_file", "args": { "file": "res://Packages/Default/Delete Left Right.sublime-macro" },
        "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\$$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\$", "match_all": true }
        ],
    },

    // left-right pairs

    { "keys": ["("], "command": "latex_plus_pair", "args": {"arg": ["(", ")"]}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_in_brackets", "operator": "equal", "operand": true}
        ]
    },
    { "keys": ["["], "command": "latex_plus_pair", "args": {"arg": ["[", "]"]}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_in_square_brackets", "operator": "equal", "operand": true}
        ]
    },
    { "keys": ["{"], "command": "latex_plus_pair", "args": {"arg": ["\\{", "\\}"]}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_in_curly_brackets", "operator": "equal", "operand": true}
        ]
    },

    // vim-latex like keymaps - general
    { "keys": ["_"], "command": "insert_snippet", "args": {"contents": "{$1}$0"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "_$", "match_all": true }
        ]
    },
    { "keys": ["^"], "command": "insert_snippet", "args": {"contents": "{$1}$0"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\^$", "match_all": true }
        ]
    },
    { "keys": [".", ".", "."], "command": "insert_snippet", "args": {"contents": "\\ldots"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "/"], "command": "insert_snippet", "args": {"contents": "\\frac{$1}{$2}$0"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "0"], "command": "insert_snippet", "args": {"contents": "\\varnothing"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "2"], "command": "insert_snippet", "args": {"contents": "\\sqrt{$1}$0"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "6"], "command": "insert_snippet", "args": {"contents": "\\partial"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "8"], "command": "insert_snippet", "args": {"contents": "\\infty"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },

    // vim-latex like keymaps - greek
    { "keys": ["`", "a"], "command": "insert_snippet", "args": {"contents": "\\alpha"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "b"], "command": "insert_snippet", "args": {"contents": "\\beta"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "g"], "command": "insert_snippet", "args": {"contents": "\\gamma"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "d"], "command": "insert_snippet", "args": {"contents": "\\delta"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "e"], "command": "insert_snippet", "args": {"contents": "\\varepsilon"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "z"], "command": "insert_snippet", "args": {"contents": "\\zeta"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "h"], "command": "insert_snippet", "args": {"contents": "\\eta"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "q"], "command": "insert_snippet", "args": {"contents": "\\theta"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "i"], "command": "insert_snippet", "args": {"contents": "\\iota"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "k"], "command": "insert_snippet", "args": {"contents": "\\kappa"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "l"], "command": "insert_snippet", "args": {"contents": "\\lambda"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "m"], "command": "insert_snippet", "args": {"contents": "\\mu"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "n"], "command": "insert_snippet", "args": {"contents": "\\nu"}, "context":
         [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "x"], "command": "insert_snippet", "args": {"contents": "\\xi"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "p"], "command": "insert_snippet", "args": {"contents": "\\pi"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "r"], "command": "insert_snippet", "args": {"contents": "\\rho"}, "context":
         [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "s"], "command": "insert_snippet", "args": {"contents": "\\sigma"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "t"], "command": "insert_snippet", "args": {"contents": "\\tau"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "u"], "command": "insert_snippet", "args": {"contents": "\\upsilon"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "f"], "command": "insert_snippet", "args": {"contents": "\\varphi"}, "context":
         [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "c"], "command": "insert_snippet", "args": {"contents": "\\chi"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "y"], "command": "insert_snippet", "args": {"contents": "\\psi"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "w"], "command": "insert_snippet", "args": {"contents": "\\omega"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "G"], "command": "insert_snippet", "args": {"contents": "\\Gamma"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "D"], "command": "insert_snippet", "args": {"contents": "\\Delta"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "Q"], "command": "insert_snippet", "args": {"contents": "\\Theta"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "L"], "command": "insert_snippet", "args": {"contents": "\\Lambda"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "X"], "command": "insert_snippet", "args": {"contents": "\\Xi"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "P"], "command": "insert_snippet", "args": {"contents": "\\Pi"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "S"], "command": "insert_snippet", "args": {"contents": "\\Sigma"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "Y"], "command": "insert_snippet", "args": {"contents": "\\Upsilon"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "F"], "command": "insert_snippet", "args": {"contents": "\\Phi"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "Y"], "command": "insert_snippet", "args": {"contents": "\\Psi"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    },
    { "keys": ["`", "W"], "command": "insert_snippet", "args": {"contents": "\\Omega"}, "context":
        [
            { "key": "selector", "operator": "equal", "operand": "meta.definition.math.latex" }
        ]
    }
]
